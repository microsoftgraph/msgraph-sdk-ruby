require 'microsoft_kiota_abstractions'
require_relative '../microsoft_graph'
require_relative './models'

module MicrosoftGraph
    module Models
        class SecurityMalwareEvidence < MicrosoftGraph::Models::SecurityAlertEvidence
            include MicrosoftKiotaAbstractions::Parsable
            ## 
            # The category property
            @category
            ## 
            # The files property
            @files
            ## 
            # The name property
            @name
            ## 
            # The processes property
            @processes
            ## 
            ## Gets the category property value. The category property
            ## @return a string
            ## 
            def category
                return @category
            end
            ## 
            ## Sets the category property value. The category property
            ## @param value Value to set for the category property.
            ## @return a void
            ## 
            def category=(value)
                @category = value
            end
            ## 
            ## Instantiates a new SecurityMalwareEvidence and sets the default values.
            ## @return a void
            ## 
            def initialize()
                super
                @odata_type = "#microsoft.graph.security.malwareEvidence"
            end
            ## 
            ## Creates a new instance of the appropriate class based on discriminator value
            ## @param parse_node The parse node to use to read the discriminator value and create the object
            ## @return a security_malware_evidence
            ## 
            def self.create_from_discriminator_value(parse_node)
                raise StandardError, 'parse_node cannot be null' if parse_node.nil?
                return SecurityMalwareEvidence.new
            end
            ## 
            ## Gets the files property value. The files property
            ## @return a security_file_evidence
            ## 
            def files
                return @files
            end
            ## 
            ## Sets the files property value. The files property
            ## @param value Value to set for the files property.
            ## @return a void
            ## 
            def files=(value)
                @files = value
            end
            ## 
            ## The deserialization information for the current model
            ## @return a i_dictionary
            ## 
            def get_field_deserializers()
                return super.merge({
                    "category" => lambda {|n| @category = n.get_string_value() },
                    "files" => lambda {|n| @files = n.get_collection_of_object_values(lambda {|pn| MicrosoftGraph::Models::SecurityFileEvidence.create_from_discriminator_value(pn) }) },
                    "name" => lambda {|n| @name = n.get_string_value() },
                    "processes" => lambda {|n| @processes = n.get_collection_of_object_values(lambda {|pn| MicrosoftGraph::Models::SecurityProcessEvidence.create_from_discriminator_value(pn) }) },
                })
            end
            ## 
            ## Gets the name property value. The name property
            ## @return a string
            ## 
            def name
                return @name
            end
            ## 
            ## Sets the name property value. The name property
            ## @param value Value to set for the name property.
            ## @return a void
            ## 
            def name=(value)
                @name = value
            end
            ## 
            ## Gets the processes property value. The processes property
            ## @return a security_process_evidence
            ## 
            def processes
                return @processes
            end
            ## 
            ## Sets the processes property value. The processes property
            ## @param value Value to set for the processes property.
            ## @return a void
            ## 
            def processes=(value)
                @processes = value
            end
            ## 
            ## Serializes information the current object
            ## @param writer Serialization writer to use to serialize this model
            ## @return a void
            ## 
            def serialize(writer)
                raise StandardError, 'writer cannot be null' if writer.nil?
                super
                writer.write_string_value("category", @category)
                writer.write_collection_of_object_values("files", @files)
                writer.write_string_value("name", @name)
                writer.write_collection_of_object_values("processes", @processes)
            end
        end
    end
end
